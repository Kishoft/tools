-- MySQL Script generated by MySQL Workbench
-- Wed Mar 30 03:14:11 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sistema
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sistema` ;

-- -----------------------------------------------------
-- Schema sistema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sistema` DEFAULT CHARACTER SET utf8 ;
USE `sistema` ;

-- -----------------------------------------------------
-- Table `sistema`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(80) NOT NULL,
  `user_surname` VARCHAR(80) NOT NULL,
  `dni` VARCHAR(15) NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `dir` VARCHAR(150) NULL,
  `cp` INT NULL,
  `tel` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`entities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`entities` (
  `entity_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `logo` VARCHAR(2048) NULL,
  `paid_until` DATE NULL,
  PRIMARY KEY (`entity_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`contracts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`contracts` (
  `users_id` INT NOT NULL,
  `entities_id` INT NOT NULL,
  `level` INT NOT NULL,
  `temp` DATE NULL,
  `approved` TINYINT(1) NOT NULL DEFAULT 0,
  `details` TEXT(8000) NULL,
  PRIMARY KEY (`users_id`, `entities_id`),
  CONSTRAINT `fk_users_has_entities_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `sistema`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_entities_entities1`
    FOREIGN KEY (`entities_id`)
    REFERENCES `sistema`.`entities` (`entity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_users_has_entities_entities1_idx` ON `sistema`.`contracts` (`entities_id` ASC) VISIBLE;

CREATE INDEX `fk_users_has_entities_users_idx` ON `sistema`.`contracts` (`users_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`outsiders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`outsiders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `tel` INT NULL,
  `dir` VARCHAR(150) NULL,
  `cp` INT NULL,
  `latitude` DECIMAL(7,7) NULL,
  `longitude` DECIMAL(7,7) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`units`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`units` (
  `unit_id` INT NOT NULL AUTO_INCREMENT,
  `unit_name` VARCHAR(45) NOT NULL,
  `unit_abbreviation` VARCHAR(9) NOT NULL,
  PRIMARY KEY (`unit_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(70) NOT NULL,
  `ean` VARCHAR(13) NULL,
  `cost` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `profit` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `min_unit_sale` INT NOT NULL DEFAULT 1,
  `categories_id` INT NOT NULL,
  `providers_id` INT NOT NULL,
  `units_id` INT NOT NULL,
  PRIMARY KEY (`id`, `categories_id`, `providers_id`),
  CONSTRAINT `fk_products_categories1`
    FOREIGN KEY (`categories_id`)
    REFERENCES `sistema`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_providers1`
    FOREIGN KEY (`providers_id`)
    REFERENCES `sistema`.`outsiders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_units1`
    FOREIGN KEY (`units_id`)
    REFERENCES `sistema`.`units` (`unit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_products_categories1_idx` ON `sistema`.`products` (`categories_id` ASC) VISIBLE;

CREATE INDEX `fk_products_providers1_idx` ON `sistema`.`products` (`providers_id` ASC) VISIBLE;

CREATE INDEX `fk_products_units1_idx` ON `sistema`.`products` (`units_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(75) NOT NULL,
  `location_tel` INT NULL,
  `dir` VARCHAR(150) NULL,
  `cp` INT NULL,
  `latitude` DECIMAL(7,7) NULL,
  `longitude` DECIMAL(7,7) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`warehouses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`warehouses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(70) NOT NULL,
  `location_id` INT NOT NULL,
  `prioritary` TINYINT(1) NOT NULL DEFAULT 0,
  `next_to_due` DATE NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_warehouses_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `sistema`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_warehouses_location1_idx` ON `sistema`.`warehouses` (`location_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema`.`stored_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`stored_products` (
  `products_id` INT NOT NULL,
  `warehouses_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`products_id`, `warehouses_id`),
  CONSTRAINT `fk_products_has_warehouses_products1`
    FOREIGN KEY (`products_id`)
    REFERENCES `sistema`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_warehouses_warehouses1`
    FOREIGN KEY (`warehouses_id`)
    REFERENCES `sistema`.`warehouses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_products_has_warehouses_warehouses1_idx` ON `sistema`.`stored_products` (`warehouses_id` ASC) VISIBLE;

CREATE INDEX `fk_products_has_warehouses_products1_idx` ON `sistema`.`stored_products` (`products_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema`.`payment_methods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`payment_methods` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(150) NOT NULL,
  `abbreviation` VARCHAR(45) NOT NULL,
  `surcharge` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistema`.`movements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`movements` (
  `movement_id` INT NOT NULL AUTO_INCREMENT,
  `type` CHAR(1) NOT NULL,
  `state` INT NOT NULL DEFAULT 1,
  `payment_methods_id` INT NOT NULL,
  `outsiders_id` INT NOT NULL,
  `freezed_price` DOUBLE(14,2) NULL,
  `created_at` DATETIME(6) NULL,
  `modified_at` DATETIME(6) NULL,
  PRIMARY KEY (`movement_id`),
  CONSTRAINT `fk_movements_payment_methods1`
    FOREIGN KEY (`payment_methods_id`)
    REFERENCES `sistema`.`payment_methods` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movements_outsiders1`
    FOREIGN KEY (`outsiders_id`)
    REFERENCES `sistema`.`outsiders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_movements_payment_methods1_idx` ON `sistema`.`movements` (`payment_methods_id` ASC) VISIBLE;

CREATE INDEX `fk_movements_outsiders1_idx` ON `sistema`.`movements` (`outsiders_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `sistema`.`movements_has_stored_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema`.`movements_has_stored_products` (
  `movements_id` INT NOT NULL,
  `stored_products_products_id` INT NOT NULL,
  `stored_products_warehouses_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`movements_id`, `stored_products_products_id`, `stored_products_warehouses_id`),
  CONSTRAINT `fk_movements_has_stored_products_movements1`
    FOREIGN KEY (`movements_id`)
    REFERENCES `sistema`.`movements` (`movement_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movements_has_stored_products_stored_products1`
    FOREIGN KEY (`stored_products_products_id` , `stored_products_warehouses_id`)
    REFERENCES `sistema`.`stored_products` (`products_id` , `warehouses_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_movements_has_stored_products_stored_products1_idx` ON `sistema`.`movements_has_stored_products` (`stored_products_products_id` ASC, `stored_products_warehouses_id` ASC) VISIBLE;

CREATE INDEX `fk_movements_has_stored_products_movements1_idx` ON `sistema`.`movements_has_stored_products` (`movements_id` ASC) VISIBLE;

USE `sistema` ;

-- -----------------------------------------------------
-- procedure create_tenant_database
-- -----------------------------------------------------

DELIMITER $$
USE `sistema`$$
CREATE PROCEDURE create_tenant_database (IN tenant_id INT)
BEGIN
	SET @dbname = 'tenant_';
    SET @query = CONCAT('CREATE DATABASE ', @dbname, '_', tenant_id);
    PREPARE stmt FROM @query;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `sistema`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`users` (`id`, `name`, `user_surname`, `dni`, `email`, `password`, `dir`, `cp`, `tel`) VALUES (DEFAULT, 'Noelia Romina', 'Ruíz', '40123123', 'estefitrinidad@gmail.com', 'shhhsecreto', NULL, NULL, NULL);
INSERT INTO `sistema`.`users` (`id`, `name`, `user_surname`, `dni`, `email`, `password`, `dir`, `cp`, `tel`) VALUES (DEFAULT, 'Ezequiel', 'Regaldo', '37174698', 'regaldo.ezequiel@gmail.com', 'chichito', 'Callefalsa 123', 1754, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`entities`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`entities` (`entity_id`, `name`, `logo`, `paid_until`) VALUES (DEFAULT, 'Supermercado Luna', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`contracts`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`contracts` (`users_id`, `entities_id`, `level`, `temp`, `approved`, `details`) VALUES (1, 1, 1, NULL, 1, NULL);
INSERT INTO `sistema`.`contracts` (`users_id`, `entities_id`, `level`, `temp`, `approved`, `details`) VALUES (2, 1, 1, NULL, 1, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`categories`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`categories` (`id`, `name`) VALUES (DEFAULT, 'Alfajores');
INSERT INTO `sistema`.`categories` (`id`, `name`) VALUES (DEFAULT, 'Bebidas');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`outsiders`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`outsiders` (`id`, `type`, `name`, `email`, `tel`, `dir`, `cp`, `latitude`, `longitude`) VALUES (DEFAULT, 'provider', 'Vendedor de merca', 'sospechoso@turbio.com', NULL, NULL, NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`units`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`units` (`unit_id`, `unit_name`, `unit_abbreviation`) VALUES (DEFAULT, 'Unidades', 'Uns');
INSERT INTO `sistema`.`units` (`unit_id`, `unit_name`, `unit_abbreviation`) VALUES (DEFAULT, 'Litros', 'Lts');
INSERT INTO `sistema`.`units` (`unit_id`, `unit_name`, `unit_abbreviation`) VALUES (DEFAULT, 'Galones', 'Gals');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`products`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`products` (`id`, `name`, `ean`, `cost`, `profit`, `min_unit_sale`, `categories_id`, `providers_id`, `units_id`) VALUES (DEFAULT, 'Alfajor Jorgito', '1231231231231', 40, 15, 10, 1, 1, 1);
INSERT INTO `sistema`.`products` (`id`, `name`, `ean`, `cost`, `profit`, `min_unit_sale`, `categories_id`, `providers_id`, `units_id`) VALUES (DEFAULT, 'Coquita-Cola 1,25 Lt', '3213213213213', 80, 10, 5, 2, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`location`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`location` (`id`, `name`, `location_tel`, `dir`, `cp`, `latitude`, `longitude`) VALUES (DEFAULT, 'Luna 1', NULL, 'Chinatown 123', NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`warehouses`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`warehouses` (`id`, `name`, `location_id`, `prioritary`, `next_to_due`) VALUES (DEFAULT, 'Góndola 1', 1, 1, NULL);
INSERT INTO `sistema`.`warehouses` (`id`, `name`, `location_id`, `prioritary`, `next_to_due`) VALUES (DEFAULT, 'Bodega 1', 1, 0, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`stored_products`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`stored_products` (`products_id`, `warehouses_id`, `quantity`) VALUES (1, 1, 60);
INSERT INTO `sistema`.`stored_products` (`products_id`, `warehouses_id`, `quantity`) VALUES (1, 2, 200);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sistema`.`payment_methods`
-- -----------------------------------------------------
START TRANSACTION;
USE `sistema`;
INSERT INTO `sistema`.`payment_methods` (`id`, `name`, `abbreviation`, `surcharge`) VALUES (DEFAULT, 'Efectivo', 'Ef', DEFAULT);
INSERT INTO `sistema`.`payment_methods` (`id`, `name`, `abbreviation`, `surcharge`) VALUES (DEFAULT, 'Mercado Pago', 'MP', 5);

COMMIT;

