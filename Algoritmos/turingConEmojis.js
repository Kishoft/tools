let result = ""

function getPrevFist(index, message){
    let fists = 1;
    for (let i = index - 1; i >= 0; i--) {
        if (message[i] === "ðŸ¤œ") fists--
        if (message[i] === "ðŸ¤›") fists++
        if (fists === 0) return i     
    }
}

function getNextFist(index, message){
    let fists = 1;
    for (let i = index + 1; i < message.length; i++) {
        if (message[i] === "ðŸ¤œ") fists++
        if (message[i] === "ðŸ¤›") fists--
        if (fists === 0) return i     
    }
}


function translate(message) {
    /*
    ðŸ‘‰ : moves the memory pointer to the next cell

    ðŸ‘ˆ : moves the memory pointer to the previous cell

    ðŸ‘† : increment the memory cell at the current position

    ðŸ‘‡ : decreases the memory cell at the current position.

    ðŸ¤œ : if the memory cell at the current position is 0, jump just after the corresponding ðŸ¤›

    ðŸ¤› : if the memory cell at the current position is not 0, jump just after the corresponding ðŸ¤œ

    ðŸ‘Š : Display the current character represented by the ASCII code defined by the current position.
    */

    let encodedMessage = Array.from(message)
    let memory = [0];
    let pointer = 0;
    let index = 0;

    while(index < encodedMessage.length){
        switch (encodedMessage[index]) {
            case "ðŸ‘‰":
                pointer++
                if(memory[pointer] === undefined) {
                    memory[pointer] = 0
                }
                break;
            case "ðŸ‘ˆ":
                pointer--
                if(memory[pointer] === undefined) {
                    memory[pointer] = 0
                }
                break;
            case "ðŸ‘†":
                memory[pointer]++
                if(memory[pointer] > 255) {
                    memory[pointer] = 0
                }
                break;
            case "ðŸ‘‡":
                memory[pointer]--
                if(memory[pointer] < 0) {
                    memory[pointer] = 255
                }
                break;
            case "ðŸ¤œ":
                if (memory[pointer] === 0) {
                   index = getNextFist(index, encodedMessage)
                }
                break;
            case "ðŸ¤›":
                if (memory[pointer] !== 0) {
                    index = getPrevFist(index, encodedMessage)
                }
                break;
            case "ðŸ‘Š":
                result += String.fromCharCode(memory[pointer])
                break;
            default:
                break;
        }

        index++
    }
    console.log(result)
}


translate("ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ¤œðŸ‘‡ðŸ‘ˆðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘ŠðŸ‘‰ðŸ‘‰ðŸ‘†ðŸ‘‰ðŸ‘‡ðŸ¤œðŸ‘†ðŸ¤›ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ¤œðŸ‘‰ðŸ¤œðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ˆðŸ‘ˆðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘‰ðŸ‘‡ðŸ‘ŠðŸ‘ˆðŸ‘ˆðŸ‘†ðŸ¤œðŸ‘‰ðŸ¤œðŸ‘†ðŸ‘‰ðŸ‘†ðŸ¤›ðŸ‘‰ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘‰ðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘†ðŸ‘ŠðŸ‘‰ðŸ‘†ðŸ‘Š")